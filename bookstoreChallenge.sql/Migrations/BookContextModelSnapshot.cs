// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookstoreChallenge.sql.Data.Configuration;

#nullable disable

namespace bookstoreChallenge.sql.Migrations
{
    [DbContext(typeof(BookContext))]
    partial class BookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bookstoreChallenge.sql.Models.Book.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6bae431-0b44-4c4f-bdc6-e571045b5e05"),
                            Author = "Name Surname",
                            Genre = "Fantasy",
                            ISBN = "123456-789101112-13141516-1718192021",
                            Price = 24.550000000000001,
                            Publisher = "Publisher Test",
                            Status = true,
                            Title = "Title Teste 1"
                        },
                        new
                        {
                            Id = new Guid("6789bb44-7367-4c69-9972-61f906aabb5d"),
                            Author = "Name Surname",
                            Genre = "Drama",
                            ISBN = "123456-789101112-13141516-1718192021",
                            Price = 19.120000000000001,
                            Publisher = "Publisher Test",
                            Status = true,
                            Title = "Title Teste 2"
                        },
                        new
                        {
                            Id = new Guid("18059d06-36e7-4d05-9640-acb210583c08"),
                            Author = "Name Surname",
                            Genre = "Adventure",
                            ISBN = "123456-789101112-13141516-1718192021",
                            Price = 32.880000000000003,
                            Publisher = "Publisher Test",
                            Status = false,
                            Title = "Title Teste 3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
